[project]
name = "super-data"
dynamic = ["version"]
description = "A Model Context Protocol (MCP) server that provides LLMs with sophisticated data querying capabilities across multiple data sources."
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "Berry Development, LLC." }]
maintainers = [{ name = "Eric Berry", email = "eric@berrydev.ai" }]
keywords = ["mcp", "model context protocol", "llm", "large language model", "data querying", "data integration"]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "mcp>=0.1.0",
    "sqlalchemy>=2.0",
    "alembic>=1.13",
    "pyyaml>=6.0",
    "jsonschema>=4.0",
    "aiofiles>=24.0",
    "aiocache>=0.12",
    "boto3>=1.34",
    "aioboto3>=13.0",
    "fastapi>=0.110.0",
    "uvicorn>=0.29.0",
    "websockets>=12.0",
    "aiosqlite>=0.20.0",
]


[tool.uv]
default-groups = ["dev", "docs"]
required-version = ">=0.7.2"

[dependency-groups]
dev = [
    "pytest>=8.0",
    "pytest-asyncio>=0.23",
    "ruff>=0.4",
    "mypy>=1.10",
    "faker>=24.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-glightbox>=0.4.0",
    "mkdocs-material[imaging]>=9.5.45",
    "mkdocstrings-python>=1.12.2",
]

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"
bump = true

[project.urls]
Homepage = "https://super-data.io"
Repository = "https://github.com/berrydev-ai/super-data"
Issues = "https://github.com/berrydev-ai/super-data/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/super_data"]

[tool.pyright]
typeCheckingMode = "strict"
venvPath = "."
venv = ".venv"

[tool.ruff]
line-length = 120
target-version = "py312"
extend-exclude = ["README.md"]

[tool.ruff.lint]
select = [
    "C4", # flake8-comprehensions
    "C90", # mccabe
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "PERF", # Perflint
    "PL", # Pylint
    "UP", # pyupgrade
]
ignore = ["PERF203", "PLC0415", "PLR0402"]
mccabe.max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["bytes", "float", "int", "str"]
max-args = 5         # Default is 5
max-branches = 12     # Default is 12
max-returns = 6      # Default is 6
max-statements = 50  # Default is 50


[tool.pytest.ini_options]
log_cli = true
xfail_strict = true
addopts = """
    --color=yes
    --capture=fd
    --numprocesses auto
"""
filterwarnings = [
    "error",
    # This should be fixed on Uvicorn's side.
    "ignore::DeprecationWarning:websockets",
    "ignore:websockets.server.WebSocketServerProtocol is deprecated:DeprecationWarning",
    "ignore:Returning str or bytes.*:DeprecationWarning:mcp.server.lowlevel",
    # pywin32 internal deprecation warning
    "ignore:getargs.*The 'u' format is deprecated:DeprecationWarning"
]

